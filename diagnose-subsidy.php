<?php

require __DIR__.'/vendor/autoload.php';

$app = require_once __DIR__.'/bootstrap/app.php';
$app->make(Illuminate\Contracts\Console\Kernel::class)->bootstrap();

use App\Models\HR\Employee;
use App\Helpers\PayrollCalculatorHelper;
use Carbon\Carbon;

echo "\n==========================================\n";
echo "üîç DIAGN√ìSTICO DE SUBS√çDIOS DE NATAL/F√âRIAS\n";
echo "==========================================\n\n";

// Buscar um funcion√°rio
$employee = Employee::first();

if (!$employee) {
    echo "‚ùå Nenhum funcion√°rio encontrado no banco de dados!\n";
    exit(1);
}

echo "‚úÖ Funcion√°rio encontrado:\n";
echo "   ID: {$employee->id}\n";
echo "   Nome: {$employee->full_name}\n";
echo "   Coluna 'basic_salary': " . ($employee->basic_salary ?? 'NULL') . "\n";
echo "   Coluna 'base_salary': " . ($employee->base_salary ?? 'NULL') . "\n";
echo "\n";

// Verificar qual coluna existe
$columns = \DB::connection()->getSchemaBuilder()->getColumnListing('employees');
echo "üìã Colunas na tabela 'employees':\n";
if (in_array('basic_salary', $columns)) {
    echo "   ‚úÖ 'basic_salary' existe\n";
} else {
    echo "   ‚ùå 'basic_salary' N√ÉO existe\n";
}

if (in_array('base_salary', $columns)) {
    echo "   ‚úÖ 'base_salary' existe\n";
} else {
    echo "   ‚ùå 'base_salary' N√ÉO existe\n";
}
echo "\n";

// Testar Helper
$start = Carbon::now()->startOfMonth();
$end = Carbon::now()->endOfMonth();

echo "üîß Testando PayrollCalculatorHelper...\n";
$calculator = new PayrollCalculatorHelper($employee, $start, $end);

// Verificar propriedade interna do helper
$reflection = new ReflectionClass($calculator);
$basicSalaryProperty = $reflection->getProperty('basicSalary');
$basicSalaryProperty->setAccessible(true);
$helperBasicSalary = $basicSalaryProperty->getValue($calculator);

echo "   Helper->basicSalary (interno): {$helperBasicSalary}\n";
echo "\n";

// Calcular
$calculator->loadAllEmployeeData();
$calculator->setChristmasSubsidy(true);
$calculator->setVacationSubsidy(true);
$results = $calculator->calculate();

echo "üìä Resultados do Helper:\n";
echo "   basic_salary: " . ($results['basic_salary'] ?? 'NULL') . "\n";
echo "   christmas_subsidy: " . ($results['christmas_subsidy'] ? 'true' : 'false') . "\n";
echo "   christmas_subsidy_amount: " . ($results['christmas_subsidy_amount'] ?? 'NULL') . "\n";
echo "   vacation_subsidy: " . ($results['vacation_subsidy'] ? 'true' : 'false') . "\n";
echo "   vacation_subsidy_amount: " . ($results['vacation_subsidy_amount'] ?? 'NULL') . "\n";
echo "\n";

// C√°lculo manual
$manualChristmas = $helperBasicSalary * 0.5;
$manualVacation = $helperBasicSalary * 0.5;

echo "üßÆ C√°lculo Manual (50% do sal√°rio):\n";
echo "   Christmas: {$helperBasicSalary} * 0.5 = {$manualChristmas}\n";
echo "   Vacation: {$helperBasicSalary} * 0.5 = {$manualVacation}\n";
echo "\n";

// Diagn√≥stico
echo "üéØ DIAGN√ìSTICO:\n";

if ($helperBasicSalary == 0) {
    echo "   ‚ùå PROBLEMA: Helper n√£o est√° carregando o sal√°rio b√°sico!\n";
    echo "   ‚û°Ô∏è  Verificar linha 89 do PayrollCalculatorHelper.php\n";
    echo "   ‚û°Ô∏è  Deve usar: \$employee->basic_salary (n√£o base_salary)\n";
} else {
    echo "   ‚úÖ Helper carrega sal√°rio corretamente: {$helperBasicSalary}\n";
}

if (($results['christmas_subsidy_amount'] ?? 0) == 0 && $results['christmas_subsidy'] == true) {
    echo "   ‚ùå PROBLEMA: Subs√≠dio de Natal est√° marcado mas valor √© 0!\n";
    echo "   ‚û°Ô∏è  Verificar getChristmasSubsidyAmount() no Helper\n";
} else {
    echo "   ‚úÖ Subs√≠dio de Natal calculado corretamente\n";
}

if (($results['vacation_subsidy_amount'] ?? 0) == 0 && $results['vacation_subsidy'] == true) {
    echo "   ‚ùå PROBLEMA: Subs√≠dio de F√©rias est√° marcado mas valor √© 0!\n";
    echo "   ‚û°Ô∏è  Verificar getVacationSubsidyAmount() no Helper\n";
} else {
    echo "   ‚úÖ Subs√≠dio de F√©rias calculado corretamente\n";
}

echo "\n==========================================\n";
echo "‚úÖ Diagn√≥stico completo!\n";
echo "==========================================\n\n";
