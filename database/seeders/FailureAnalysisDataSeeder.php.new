<?php

namespace Database\Seeders;

use Illuminate\Database\Seeder;
use Illuminate\Support\Facades\DB;
use Carbon\Carbon;
use App\Models\MaintenanceArea;
use App\Models\MaintenanceLine;
use App\Models\MaintenanceEquipment;
use App\Models\MaintenanceCorrective;
use App\Models\FailureCause;
use App\Models\FailureMode;
use App\Models\FailureCauseCategory;
use App\Models\FailureModeCategory;
use App\Models\User;

class FailureAnalysisDataSeeder extends Seeder
{
    /**
     * Executa o seeder para gerar dados de falhas para o relatório de análise
     * 
     * @return void
     */
    public function run()
    {
        $this->command->info('Criando dados de análise de falhas...');
        
        // Criar categorias de causas de falha
        $causeCategoryIds = $this->createFailureCauseCategories();
        
        // Criar categorias de modos de falha
        $modeCategoryIds = $this->createFailureModeCategories();
        
        // Criar causas de falha
        $causeIds = $this->createFailureCauses($causeCategoryIds);
        
        // Criar modos de falha
        $modeIds = $this->createFailureModes($modeCategoryIds);
        
        // Garantir que existam áreas para testes
        $areaIds = $this->ensureAreas();
        
        // Garantir que existam linhas para testes
        $lineIds = $this->ensureLines($areaIds);
        
        // Garantir que existam equipamentos para testes
        $equipmentIds = $this->ensureEquipment($areaIds, $lineIds);
        
        // Garantir que existam usuários para testes
        $userIds = User::pluck('id')->toArray();
        if (empty($userIds)) {
            $userIds = [1]; // Usar ID 1 como fallback se não existirem usuários
        }
        
        // Criar registros de falhas (manutenções corretivas)
        $this->createFailureRecords($equipmentIds, $causeIds, $modeIds, $userIds);
        
        $this->command->info('Dados de análise de falhas criados com sucesso!');
    }
    
    /**
     * Cria categorias de causas de falha
     */
    private function createFailureCauseCategories()
    {
        $categories = [
            'Operacional',
            'Mecânica',
            'Elétrica',
            'Hidráulica',
            'Pneumática'
        ];
        
        $categoryIds = [];
        
        foreach ($categories as $category) {
            $exists = FailureCauseCategory::where('name', $category)->first();
            if (!$exists) {
                $categoryIds[] = FailureCauseCategory::create([
                    'name' => $category,
                    'description' => 'Categoria de causa de falha: ' . $category
                ])->id;
            } else {
                $categoryIds[] = $exists->id;
            }
        }
        
        return $categoryIds;
    }
    
    /**
     * Cria categorias de modos de falha
     */
    private function createFailureModeCategories()
    {
        $categories = [
            'Desgaste',
            'Quebra',
            'Vazamento',
            'Elétrico',
            'Controle'
        ];
        
        $categoryIds = [];
        
        foreach ($categories as $category) {
            $exists = FailureModeCategory::where('name', $category)->first();
            if (!$exists) {
                $categoryIds[] = FailureModeCategory::create([
                    'name' => $category,
                    'description' => 'Categoria de modo de falha: ' . $category
                ])->id;
            } else {
                $categoryIds[] = $exists->id;
            }
        }
        
        return $categoryIds;
    }
    
    /**
     * Cria causas de falha
     */
    private function createFailureCauses($categoryIds)
    {
        $causes = [
            [
                'name' => 'Erro de Operação',
                'description' => 'Falha causada por erro do operador',
                'category_index' => 0
            ],
            [
                'name' => 'Sobrecarga',
                'description' => 'Falha causada por sobrecarga operacional',
                'category_index' => 0
            ],
            [
                'name' => 'Desgaste de Componente',
                'description' => 'Falha causada por desgaste natural de componente',
                'category_index' => 1
            ],
            [
                'name' => 'Fadiga de Material',
                'description' => 'Falha causada por fadiga de material',
                'category_index' => 1
            ],
            [
                'name' => 'Lubrificação Inadequada',
                'description' => 'Falha causada por lubrificação insuficiente ou inadequada',
                'category_index' => 1
            ],
            [
                'name' => 'Manutenção Atrasada',
                'description' => 'Falha causada por manutenção preventiva atrasada',
                'category_index' => 1
            ],
            [
                'name' => 'Dimensionamento Incorreto',
                'description' => 'Falha causada por dimensionamento incorreto de componente',
                'category_index' => 1
            ],
            [
                'name' => 'Variação de Energia',
                'description' => 'Falha causada por variação na energia elétrica',
                'category_index' => 2
            ],
            [
                'name' => 'Contaminação',
                'description' => 'Falha causada por contaminação de fluido',
                'category_index' => 3
            ],
            [
                'name' => 'Falha de Vedação',
                'description' => 'Falha causada por problema em vedação',
                'category_index' => 3
            ],
            [
                'name' => 'Pressão Inadequada',
                'description' => 'Falha causada por pressão operacional incorreta',
                'category_index' => 4
            ],
            [
                'name' => 'Obstrução',
                'description' => 'Falha causada por obstrução em tubulação ou filtro',
                'category_index' => 4
            ],
            [
                'name' => 'Falha de Software',
                'description' => 'Falha causada por bug ou erro de software',
                'category_index' => 2
            ],
            [
                'name' => 'Sobretemperatura',
                'description' => 'Falha causada por temperatura excessiva',
                'category_index' => 2
            ],
            [
                'name' => 'Umidade',
                'description' => 'Falha causada por umidade excessiva',
                'category_index' => 2
            ]
        ];
        
        $causeIds = [];
        
        foreach ($causes as $cause) {
            $exists = FailureCause::where('name', $cause['name'])->first();
            if (!$exists) {
                $causeIds[] = FailureCause::create([
                    'name' => $cause['name'],
                    'description' => $cause['description'],
                    'category_id' => $categoryIds[$cause['category_index']] ?? null
                ])->id;
            } else {
                $causeIds[] = $exists->id;
            }
        }
        
        return $causeIds;
    }
    
    /**
     * Cria modos de falha
     */
    private function createFailureModes($categoryIds)
    {
        $modes = [
            [
                'name' => 'Quebra de Engrenagem',
                'description' => 'Quebra de dente ou falha total em engrenagem',
                'category_index' => 1
            ],
            [
                'name' => 'Falha de Rolamento',
                'description' => 'Desgaste ou quebra de rolamento',
                'category_index' => 0
            ],
            [
                'name' => 'Curto-Circuito',
                'description' => 'Curto-circuito em sistema elétrico',
                'category_index' => 3
            ],
            [
                'name' => 'Sobreaquecimento de Motor',
                'description' => 'Motor aquecendo além do limite operacional',
                'category_index' => 3
            ],
            [
                'name' => 'Vazamento Hidráulico',
                'description' => 'Vazamento de fluido hidráulico',
                'category_index' => 2
            ],
            [
                'name' => 'Bomba Hidráulica Danificada',
                'description' => 'Dano interno em bomba hidráulica',
                'category_index' => 2
            ],
            [
                'name' => 'Vazamento de Ar',
                'description' => 'Vazamento no sistema pneumático',
                'category_index' => 2
            ],
            [
                'name' => 'Falha de Sensor',
                'description' => 'Sensor com leitura incorreta ou ausente',
                'category_index' => 4
            ],
            [
                'name' => 'Falha de PLC',
                'description' => 'Controlador lógico programável com falha',
                'category_index' => 4
            ],
            [
                'name' => 'Contaminação de Fluido',
                'description' => 'Fluido hidráulico contaminado',
                'category_index' => 2
            ],
            [
                'name' => 'Travamento Mecânico',
                'description' => 'Componente mecânico travado',
                'category_index' => 1
            ],
            [
                'name' => 'Falha de Calibração',
                'description' => 'Equipamento fora de calibração',
                'category_index' => 4
            ],
            [
                'name' => 'Quebra de Correia',
                'description' => 'Ruptura de correia de transmissão',
                'category_index' => 1
            ],
            [
                'name' => 'Obstrução de Filtro',
                'description' => 'Filtro entupido causando restrição',
                'category_index' => 0
            ],
            [
                'name' => 'Desalinhamento',
                'description' => 'Componentes desalinhados',
                'category_index' => 0
            ]
        ];
        
        $modeIds = [];
        
        foreach ($modes as $mode) {
            $exists = FailureMode::where('name', $mode['name'])->first();
            if (!$exists) {
                $modeIds[] = FailureMode::create([
                    'name' => $mode['name'],
                    'description' => $mode['description'],
                    'category_id' => $categoryIds[$mode['category_index']] ?? null
                ])->id;
            } else {
                $modeIds[] = $exists->id;
            }
        }
        
        return $modeIds;
    }
