<?php

require_once 'vendor/autoload.php';

use Spatie\Permission\Models\Role;
use Spatie\Permission\Models\Permission;

// Bootstrap Laravel
$app = require_once 'bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$kernel->bootstrap();

echo "=== CRIANDO ROLES MODULARES ===\n\n";

// Criar role: maintenance-manager
$role = Role::firstOrCreate(['name' => 'maintenance-manager', 'guard_name' => 'web']);
$permissions = [
    'equipment.view',
    'equipment.create',
    'equipment.edit',
    'equipment.delete',
    'equipment.import',
    'equipment.export',
    'preventive.view',
    'preventive.create',
    'preventive.edit',
    'preventive.delete',
    'preventive.schedule',
    'preventive.complete',
    'corrective.view',
    'corrective.create',
    'corrective.edit',
    'corrective.delete',
    'corrective.complete',
    'reports.view',
    'reports.export',
    'reports.dashboard',
    'users.view',
    'users.create',
    'users.edit',
    'users.delete',
    'settings.view',
    'settings.edit',
    'areas.view',
    'areas.create',
    'areas.edit',
    'areas.delete',
    'corrective.manage',
    'users.manage',
    'roles.manage',
    'settings.manage',
    'maintenance.view',
    'maintenance.create',
    'maintenance.edit',
    'maintenance.delete',
    'maintenance.calendar',
    'maintenance.schedule',
    'maintenance.export',
    'maintenance.reports',
    'maintenance.dashboard.view',
    'maintenance.dashboard.manage',
    'preventive.manage',
    'maintenance.plan.view',
    'maintenance.plan.create',
    'maintenance.plan.edit',
    'maintenance.plan.delete',
    'maintenance.plan.manage',
    'equipment.manage',
    'maintenance.equipment.view',
    'maintenance.equipment.create',
    'maintenance.equipment.edit',
    'maintenance.equipment.delete',
    'maintenance.equipment.manage',
    'parts.view',
    'parts.create',
    'parts.edit',
    'parts.delete',
    'parts.manage',
    'equipment.parts.view',
    'equipment.parts.manage',
    'stock.view',
    'stock.in',
    'stock.out',
    'stock.history',
    'stock.manage',
    'areas.manage',
    'maintenance.linearea.view',
    'maintenance.linearea.manage',
    'maintenance.task.view',
    'maintenance.task.create',
    'maintenance.task.edit',
    'maintenance.task.delete',
    'maintenance.task.manage',
    'maintenance.corrective.view',
    'maintenance.corrective.create',
    'maintenance.corrective.edit',
    'maintenance.corrective.delete',
    'maintenance.corrective.manage',
    'maintenance.failure-modes',
    'maintenance.failure-mode-categories',
    'maintenance.failure-causes',
    'maintenance.failure-cause-categories',
    'maintenance.users.view',
    'maintenance.users.manage',
    'technicians.view',
    'technicians.create',
    'technicians.edit',
    'technicians.delete',
    'technicians.manage',
    'maintenance.technicians.view',
    'maintenance.technicians.manage',
    'roles.view',
    'roles.create',
    'roles.edit',
    'roles.delete',
    'maintenance.roles.view',
    'maintenance.roles.manage',
    'maintenance.holidays.view',
    'maintenance.holidays.manage',
    'reports.generate',
    'reports.equipment.availability',
    'reports.equipment.reliability',
    'reports.maintenance.types',
    'reports.maintenance.compliance',
    'reports.maintenance.plan',
    'reports.resource.utilization',
    'reports.failure.analysis',
    'reports.downtime.impact',
    'maintenance.manage',
    'maintenance.settings',
    'parts.request',
    'maintenance.dashboard',
    'maintenance.equipment',
    'maintenance.plan',
    'maintenance.corrective',
];
$role->syncPermissions($permissions);
echo "âœ… Role maintenance-manager criada com " . count($permissions) . " permissÃµes\n";

// Criar role: mrp-manager
$role = Role::firstOrCreate(['name' => 'mrp-manager', 'guard_name' => 'web']);
$permissions = [
    'mrp.responsibles.view',
    'mrp.responsibles.create',
    'mrp.responsibles.edit',
    'mrp.responsibles.delete',
    'mrp.dashboard',
    'mrp.demand_forecasting.view',
    'mrp.bom_management.view',
    'mrp.inventory_levels.view',
    'mrp.production_scheduling.view',
    'mrp.production_orders.view',
    'mrp.purchase_planning.view',
    'mrp.capacity_planning.view',
    'mrp.failure_analysis.view',
    'mrp.financial_reporting.view',
    'mrp.lines.view',
    'mrp.reports.another_report',
    'mrp.reports.raw_material',
    'mrp.resources.view',
    'mrp.shifts.view',
    'mrp.demand_forecasting.create',
    'mrp.demand_forecasting.edit',
    'mrp.demand_forecasting.delete',
    'mrp.bom_management.create',
    'mrp.bom_management.edit',
    'mrp.bom_management.delete',
    'mrp.production_orders.create',
    'mrp.production_orders.edit',
    'mrp.production_orders.delete',
];
$role->syncPermissions($permissions);
echo "âœ… Role mrp-manager criada com " . count($permissions) . " permissÃµes\n";

// Criar role: supply_chain-manager
$role = Role::firstOrCreate(['name' => 'supply_chain-manager', 'guard_name' => 'web']);
$permissions = [
    'supplychain.dashboard',
    'supplychain.purchase_orders.view',
    'supplychain.purchase_orders.create',
    'supplychain.purchase_orders.edit',
    'supplychain.purchase_orders.delete',
    'supplychain.purchase_orders.export',
    'supplychain.goods_receipts.view',
    'supplychain.goods_receipts.create',
    'supplychain.goods_receipts.edit',
    'supplychain.goods_receipts.delete',
    'supplychain.goods_receipts.export',
    'supplychain.products.view',
    'supplychain.products.create',
    'supplychain.products.edit',
    'supplychain.products.delete',
    'supplychain.products.import',
    'supplychain.products.export',
    'supplychain.suppliers.view',
    'supplychain.suppliers.create',
    'supplychain.suppliers.edit',
    'supplychain.suppliers.delete',
    'supplychain.inventory.view',
    'supplychain.inventory.adjust',
    'supplychain.inventory.export',
    'supplychain.suppliers.manage',
    'supplychain.warehouse_transfers.view',
    'supplychain.reports.view',
    'supplychain.forms.manage',
    'supplychain.warehouse_transfers.create',
    'supplychain.warehouse_transfers.edit',
    'supplychain.warehouse_transfers.delete',
];
$role->syncPermissions($permissions);
echo "âœ… Role supply_chain-manager criada com " . count($permissions) . " permissÃµes\n";

// Criar role: hr-manager
$role = Role::firstOrCreate(['name' => 'hr-manager', 'guard_name' => 'web']);
$permissions = [
    'lines.view',
    'lines.create',
    'lines.edit',
    'lines.delete',
    'stocks.stockin',
    'stocks.stockout',
    'stocks.history',
    'stocks.part-requests',
    'lines.manage',
    'task.view',
    'task.create',
    'task.edit',
    'task.delete',
    'task.manage',
    'holidays.view',
    'holidays.create',
    'holidays.edit',
    'holidays.delete',
    'holidays.manage',
    'history.equipment.timeline',
    'history.maintenance.audit',
    'history.parts.lifecycle',
    'history.team.performance',
    'inventory.manage',
    'inventory.view',
    'system.roles.view',
    'system.roles.create',
    'system.roles.edit',
    'system.roles.delete',
    'system.permissions.view',
    'system.permissions.create',
    'system.permissions.edit',
    'system.permissions.delete',
    'system.users.view',
    'system.users.create',
    'system.users.edit',
    'system.users.delete',
    'system.settings.view',
    'system.settings.edit',
    'system.backup.create',
    'system.backup.restore',
    'system.logs.view',
    'system.audit.view',
];
$role->syncPermissions($permissions);
echo "âœ… Role hr-manager criada com " . count($permissions) . " permissÃµes\n";

echo "\nðŸŽ‰ ROLES MODULARES CRIADAS COM SUCESSO!\n";
